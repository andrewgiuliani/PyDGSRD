import numpy as np

def RK(p):
    if p==0:
        a = np.array([0])
        b = np.array([1])
        c = np.array([0])
    elif p==1:
        a =np.array( [[0,0],[0.5,0]] )
        b =np.array( [0,1] )
        c =np.array( [0,0.5] )
    elif p==2:
        a = np.array([ [0,0,0],[0.5,0,0],[-1,2,0]])
        b = np.array([1./6,4./6,1./6])
        c = np.array([0,0.5,1])
    elif p==3:
        a = np.array([[0,  0,  0,0], \
                      [0.5,0,  0,0], \
                      [0  ,0.5,0,0], \
                      [0,  0,  1,0]])
        b = np.array([1/6,2/6,2/6,1/6])
        c = np.array([0,0.5,0.5,1])
    elif p == 4:
        a =  np.array([[0    ,        0., 0., 0., 0., 0.],\
                       [1./4.,        0., 0., 0., 0., 0.],\
                       [1./8.,     1./8., 0., 0., 0., 0.],\
                       [   0.,    -1./2., 1., 0., 0., 0.],\
                       [3./16.,       0., 0., 9./16., 0., 0.],\
                       [-3./7.,2./7.,12./7.,-12./7.,8./7.,0.] ])
        b = np.array([7./90, 0., 32./90., 12./90., 32./90., 7/90.]) 
        c = np.array([0., 0.25, 0.25, 0.5, 0.75, 1.]) 
    elif p == 5:
        a = np.array([ [0,0,0,0,0,0,0,0],\
                     [1/9,0,0,0,0,0,0,0],\
                     [1/24,1/8,0,0,0,0,0,0],\
                     [1/6,-1/2,2/3,0,0,0,0,0],\
                     [-5/8,27/8,-3,3/4,0,0,0,0],\
                     [221/9,-109,289/3,-34/3,1/9,0,0,0],\
                     [-61/16,113/8,-59/6,-11/8,5/3,1/16,0,0],\
                     [358/41,-2079/82,501/41,417/41,-227/41,-9/82,36/41,0] ])
        b = np.array([41/840,0,9/35,9/280,34/105,9/280,9/35,41/840])
        c = np.array([0,1/9,1/6,1/3,1/2,2/3,5/6,1])
    else:
        print("No RK scheme implemented for p = %i"%p)
        quit()
    return a,b,c
